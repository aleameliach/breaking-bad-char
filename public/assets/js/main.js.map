{"version":3,"sources":["0_variables.js","1_data.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\n\n//CONSTANTES GLOBALES\n\n//Traigo los elementos de html y los guardo en variables\nconst searchInput = document.querySelector('.js-input');\nconst searchBtn = document.querySelector('.js-btn');\nconst cardsList = document.querySelector('.js-list');\nconst favCardsList = document.querySelector('.js-fav-list');\nconst resetButton = document.querySelector('.js-reset-btn');\nconst favsSection = document.querySelector('.js-fav-cards');\n\n// Declaro un array vacío donde luego irán los datos de la API\nlet charactersList = [];\n\n//Array de favoritos (también vacío) a partir de las tarjetas seleccionadas\nlet favoriteCharacters = [];","'use strict';\n\n//RECOJO DATOS DE LA API. Vuelvo a la primera versión de la función con fetch, porque del localStorage sólo quiero las favoritas, y había guardado todas\nfunction getData() {\n  fetch('https://breakingbadapi.com/api/characters')\n    .then((response) => response.json())\n    .then((data) => {\n      charactersList = data;\n      renderCharactersList();\n    });\n}\n\nfunction getLocalFav() {\n  const favoritesInLocalSt = JSON.parse(localStorage.getItem('favorites'));\n\n  if (favouritesInLocalSt !== null) {\n    favoriteCharacters = favoritesInLocalSt;\n    renderFavCharacters();\n  }\n}\n\n//Al abrir la página, quiero los datos de la API\ngetData();\n//y mis favoritas guardadas en localStorage\ngetLocalFav();"]}