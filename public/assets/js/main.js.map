{"version":3,"sources":["00_main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\n\n//---------------------------------------QUERYS SELECTOR ----------- LISTA CHARACTERS--------------------------------------\n\nconst characterList = document.querySelector(\".js-list\");\nconst btn = document.querySelector(\".js-btn\");\nconst input = document.querySelector(\".js-input\");\nconst favouritesList = document.querySelector(\"js-fav-cards\");\nconst resetBtn = document.querySelector(\".js-reset-btn\");\n\n// -----------------------------VARIABLES GLOBALES, la lista de personajes y la lista de personajes favoritos.--------------\n\nlet allCharacters = [];\nlet favouritesCharacters = [];\n\n//--------------------------------------------- FUNCIONES-------------------------------------------------------------------\n\n//Esta función me permite pasarle los parámetros, y al final tenemos que llamar a la función. la llamamos en la función renderCharacter\n// ponemos el id que será nuestro atributo gancho\n\nfunction renderOneCharacter(character) {\n  // hacemos esta condicion para que aparezca seleccionada favourites\n\n  const characterInFavouritesIndex = favouritesCharacters.findIndex(\n    (eachCharacterObj) =>\n      eachCharacterObj.char_id === parseInt(character.char_id)\n  );\n  let classFavourite = \"\";\n  if (characterInFavouritesIndex === -1) {\n    classFavourite = \"\";\n  } else {\n    classFavourite = \"selected\";\n  }\n  return `\n  <li class=\"js-character characters___Articles ${classFavourite}\"id=\"${character.char_id}\">\n  <article class=\"characters___Articles___Item\">\n      <img src=\"${character.img}\" alt=\"\" class=\"characters___Articles___Item--img\">\n      <h3 class=\"characters___Articles___Item--h3\">${character.name}</h3>\n      <p class=\"characters___Articles___Item--p\">${character.status}</p>\n  </article>\n  </li>`;\n}\n\n//Nos permite recorrer el array para pintarlo .\n\nfunction renderCharacters(allCharacters) {\n  characterList.innerHTML = \"\";\n  for (let i = 0; i < allCharacters.length; i++) {\n    characterList.innerHTML += renderOneCharacter(allCharacters[i]);\n  }\n  addCharacterListener();\n}\n\n// ------Esta función addCharacterListener, nos permite hacer click y crear un bucle para que pueda clicar en cada uno de ellos-\n//como es un array  no coge un elemento solo, coge varios, por eso  hay que hacer un bucle\n\nfunction addCharacterListener() {\n  const allCharactersArticles = document.querySelectorAll(\".js-character\");\n  for (const character of allCharactersArticles) {\n    character.addEventListener(\"click\", handleCharacters);\n  }\n}\n\n//esta función la hemos llamado con el addEventListener para que nos permita marcar de momento como favoritos y añadir clase selected\n\nfunction handleCharacters(event) {\n  event.currentTarget.classList.toggle(\"selected\");\n\n  //creamos una variable para utilizar el .find y que me traiga el objeto al que he dado click. Al cumplirse la condición.\n\n  const SelectedCharacters = allCharacters.find(\n    (eachCharacterObj) =>\n      eachCharacterObj.char_id === parseInt(event.currentTarget.id)\n  );\n\n  //utilizamos finIndex. Condición: si existe ese id en la lista te la añade si ya está no te la añade\n\n  const characterInFavouritesIndex = favouritesCharacters.findIndex(\n    (eachCharacterObj) =>\n      eachCharacterObj.char_id === parseInt(event.currentTarget.id)\n  );\n\n  if (characterInFavouritesIndex === -1) {\n    favouritesCharacters.push(SelectedCharacters);\n    localStorage.setItem(\"characterFav\", JSON.stringify(favouritesCharacters));\n  }\n  // Si volvemos a clickar nos lo quite de fav por eso utilizamos el findIndex en vez de find.\n  else {\n    favouritesCharacters.splice(characterInFavouritesIndex, 1);\n    localStorage.setItem(\"characterFav\", JSON.stringify(favouritesCharacters));\n  }\n  renderFavCharacters();\n}\n\n//sirve para pintarlo en la lista de favoritos\n\nfunction renderFavCharacters() {\n  let html = \"\";\n  for (const character of favouritesCharacters) {\n    html += renderOneCharacter(character);\n  }\n  favouritesList.innerHTML = html;\n}\n\n// recoger el valor de value y cuando le demos a search compararlo con el fetch y mostrarlo\n//de cada uno de mis personajes me va a filtrar que su nombre incluya lo que hemos escrito.\n\nfunction searchCharacters(event) {\n  event.preventDefault();\n  const inputValue = input.value.toLowerCase();\n  const filteredCharacters = allCharacters.filter((character) =>\n    character.name.toLowerCase().includes(inputValue)\n  );\n  renderCharacters(filteredCharacters);\n}\n\nfunction resetFav(ev) {\n  ev.preventDefault();\n  localStorage.removeItem(\"characterFav\");\n  favouritesCharacters.length = [];\n  renderCharacters(allCharacters);\n  favouritesList.innerHTML = \"\";\n  resetBtn.classList.remove(\"hidden\");\n}\n\n//--------------------------------------------------------- EVENTOS------------------------------------------------\n\nbtn.addEventListener(\"click\", searchCharacters);\nresetBtn.addEventListener(\"click\", resetFav);\n\n// -----------------------------------------CÓDIGO QUE SE EJECUTA AL CARGAR LA PÁGINA-------------------------------\n\nfetch(\"./assets/data/characters.json\")\n  .then((response) => response.json())\n  .then((data) => {\n    allCharacters = data;\n    renderCharacters(allCharacters);\n  });\n\n// Pintar lo que está guardado en el localStorage\n\nconst savedLocalFAvs = JSON.parse(localStorage.getItem(\"characterFav\"));\n\n//puedo pasarlo como parametro o la llamo por una variable global\n\nif (savedLocalFAvs !== null) {\n  favouritesCharacters = savedLocalFAvs;\n  renderFavCharacters();\n}"]}